/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AssetShareToken,
  AssetShareTokenInterface,
} from "../../contracts/AssetShareToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815234620003e85762000ca7803803806200001e81620003ed565b92833981018282820312620003e85781516001600160401b039290838111620003e857826200004f91830162000413565b9060209283820151858111620003e8576200006b920162000413565b928151818111620002e8576003908154906001948583811c93168015620003dd575b87841014620003c7578190601f9384811162000371575b5087908483116001146200030a57600092620002fe575b505060001982851b1c191690851b1782555b8551928311620002e85760049586548581811c91168015620002dd575b87821014620002c8578281116200027d575b5085918411600114620002125793839491849260009562000206575b50501b92600019911b1c19161782555b3315620001ef5760058054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025469d3c21bcecceda100000092838201809211620001da57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a3516108219081620004868239f35b601190634e487b7160e01b6000525260246000fd5b5060006024925191631e4fbdf760e01b8352820152fd5b01519350388062000118565b9190601f198416928760005284876000209460005b89898383106200026557505050106200024a575b50505050811b01825562000128565b01519060f884600019921b161c19169055388080806200023b565b86860151895590970196948501948893500162000227565b87600052866000208380870160051c820192898810620002be575b0160051c019086905b828110620002b1575050620000fc565b60008155018690620002a1565b9250819262000298565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000ea565b634e487b7160e01b600052604160045260246000fd5b015190503880620000bb565b90879350601f1983169186600052896000209260005b8b8282106200035a575050841162000341575b505050811b018255620000cd565b015160001983871b60f8161c1916905538808062000333565b8385015186558b9790950194938401930162000320565b90915084600052876000208480850160051c8201928a8610620003bd575b918991869594930160051c01915b828110620003ad575050620000a4565b600081558594508991016200039d565b925081926200038f565b634e487b7160e01b600052602260045260246000fd5b92607f16926200008d565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002e857604052565b919080601f84011215620003e85782516001600160401b038111620002e85760209062000449601f8201601f19168301620003ed565b92818452828287010111620003e85760005b8181106200047157508260009394955001015290565b85810183015184820184015282016200045b56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461057057508063095ea7b3146104c757806318160ddd146104a857806323b872dd146103b5578063313ce5671461039957806370a0823114610362578063715018a6146103025780638da5cb5b146102d957806395d89b41146101b7578063a9059cbb14610186578063dd62ed3e146101395763f2fde38b146100a757600080fd5b34610135576020366003190112610135576100c06106b0565b906100c96107bf565b6001600160a01b0391821692831561011f575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b505034610182578060031936011261018257806020926101576106b0565b61015f6106cb565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101825780600319360112610182576020906101b06101a66106b0565b60243590336106e1565b5160018152f35b5091903461018257816003193601126101825780519082845460018160011c90600183169283156102cf575b60209384841081146102bc578388529081156102a0575060011461024b575b505050829003601f01601f191682019267ffffffffffffffff8411838510176102385750829182610234925282610667565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061028c5750505050830101388080610202565b805488860183015293019284908201610276565b60ff1916878501525050151560051b8401019050388080610202565b634e487b7160e01b895260228a52602489fd5b91607f16916101e3565b50503461018257816003193601126101825760055490516001600160a01b039091168152602090f35b833461035f578060031936011261035f5761031b6107bf565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101825760203660031901126101825760209181906001600160a01b0361038a6106b0565b16815280845220549051908152f35b5050346101825781600319360112610182576020905160128152f35b50823461035f57606036600319011261035f576103d06106b0565b6103d86106cb565b916044359360018060a01b038316808352600160205286832033845260205286832054916000198310610414575b6020886101b08989896106e1565b86831061047c57811561046557331561044e575082526001602090815286832033845281529186902090859003905582906101b087610406565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101825781600319360112610182576020906002549051908152f35b50346101355781600319360112610135576104e06106b0565b602435903315610559576001600160a01b031691821561054257508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b84915083346101355782600319360112610135578260035460018160011c906001831692831561065d575b60209384841081146102bc5783885290811561064157506001146105eb57505050829003601f01601f191682019267ffffffffffffffff8411838510176102385750829182610234925282610667565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061062d5750505050830101858080610202565b805488860183015293019284908201610617565b60ff1916878501525050151560051b8401019050858080610202565b91607f169161059b565b6020808252825181830181905290939260005b82811061069c57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161067a565b600435906001600160a01b03821682036106c657565b600080fd5b602435906001600160a01b03821682036106c657565b916001600160a01b038084169283156107a6571692831561078d576000908382528160205260408220549083821061075b575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6005546001600160a01b031633036107d357565b60405163118cdaa760e01b8152336004820152602490fdfea26469706673582212206ce5bdf1a007bdc0abf82c8fc721388a0c39fd6742b3364be9f1233824b91a0f64736f6c63430008180033";

type AssetShareTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetShareTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetShareToken__factory extends ContractFactory {
  constructor(...args: AssetShareTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      AssetShareToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AssetShareToken__factory {
    return super.connect(runner) as AssetShareToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetShareTokenInterface {
    return new Interface(_abi) as AssetShareTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AssetShareToken {
    return new Contract(address, _abi, runner) as unknown as AssetShareToken;
  }
}
