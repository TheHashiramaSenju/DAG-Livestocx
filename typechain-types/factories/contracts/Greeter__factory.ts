/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346101f5576105f380380380610019816101fa565b928339810190602080828403126101f55781516001600160401b03928382116101f5570192601f908082860112156101f55784518481116101cb57601f1995610067828501881686016101fa565b928284528583830101116101f557849060005b8381106101e15750506000918301015280519384116101cb57600054926001938481811c911680156101c1575b828210146101ab57838111610165575b50809285116001146101005750839450908392916000946100f5575b50501b916000199060031b1c1916176000555b6040516103d390816102208239f35b0151925038806100d3565b9294849081166000805284600020946000905b8883831061014b5750505010610132575b505050811b016000556100e6565b015160001960f88460031b161c19169055388080610124565b858701518855909601959485019487935090810190610113565b60008052816000208480880160051c8201928489106101a2575b0160051c019085905b8281106101965750506100b7565b60008155018590610188565b9250819261017f565b634e487b7160e01b600052602260045260246000fd5b90607f16906100a7565b634e487b7160e01b600052604160045260246000fd5b81810183015185820184015286920161007a565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101cb5760405256fe60806040818152600436101561001457600080fd5b600091823560e01c908163a413686214610151575063cfae32171461003857600080fd5b3461014d578160031936011261014d5780518280548261005782610363565b95868252602096879360019060018116908160001461012c57506001146100d1575b505061008b925095939295038261032b565b82519382859384528251928382860152825b8481106100bb57505050828201840152601f01601f19168101030190f35b818101830151888201880152879550820161009d565b8580527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639492508591905b81831061011457508894505082010161008b38610079565b855488840185015294850194879450918301916100fc565b91505061008b94925060ff191682840152151560051b820101869238610079565b5080fd5b83346103285760208060031936011261014d5760043567ffffffffffffffff91828211610324573660238301121561032457816004013583811161031057601f19926101a4601f8301851684018861032b565b818752366024838301011161030c578186926024859301838a01378701015284519283116102f8576101d68454610363565b601f8111610297575b508091601f841160011461021b5750508293829392610210575b50508160011b916000199060031b1c191617815580f35b0151905083806101f9565b8480528316947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563929185905b87821061027f575050836001959610610266575b505050811b01815580f35b015160001960f88460031b161c1916905583808061025b565b80600185968294968601518155019501930190610247565b8480527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f850160051c8101918386106102ee575b601f0160051c01905b8181106102e357506101df565b8581556001016102d6565b90915081906102cd565b634e487b7160e01b84526041600452602484fd5b8580fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b80fd5b90601f8019910116810190811067ffffffffffffffff82111761034d57604052565b634e487b7160e01b600052604160045260246000fd5b90600182811c92168015610393575b602083101461037d57565b634e487b7160e01b600052602260045260246000fd5b91607f169161037256fea26469706673582212207172fc36024fe2c1b98f63c4cf9139fdf52f187babeb2b7a9b3501fddcf57da464736f6c63430008180033";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _greeting: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override deploy(
    _greeting: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_greeting, overrides || {}) as Promise<
      Greeter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Greeter__factory {
    return super.connect(runner) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new Interface(_abi) as GreeterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Greeter {
    return new Contract(address, _abi, runner) as unknown as Greeter;
  }
}
