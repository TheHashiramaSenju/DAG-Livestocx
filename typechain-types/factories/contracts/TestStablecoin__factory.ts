/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TestStablecoin,
  TestStablecoinInterface,
} from "../../contracts/TestStablecoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620003dc576040906001600160401b0381830181811183821017620002de578352600d82526020906c2a32b9ba102aa9a21021b7b4b760991b8284015283519284840184811083821117620002de57855260059182855264545553444360d81b848601528151818111620002de576003908154906001948583811c93168015620003d1575b88841014620003bb578190601f9384811162000367575b5088908483116001146200030057600092620002f4575b505060001982851b1c191690851b1782555b8651928311620002de5760049687548581811c91168015620002d3575b88821014620002be5782811162000275575b50869184116001146200020a57938394918492600095620001fe575b50501b92600019911b1c19161783555b3315620001e7578054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025469d3c21bcecceda100000092838201809211620001d257506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a3516108db9081620003e28239f35b601190634e487b7160e01b6000525260246000fd5b8351631e4fbdf760e01b8152600081850152602490fd5b01519350388062000112565b9190601f198416928860005284886000209460005b8a898383106200025d575050501062000242575b50505050811b01835562000122565b01519060f884600019921b161c191690553880808062000233565b8686015189559097019694850194889350016200021f565b886000528760002083808701891c8201928a8810620002b4575b01881c019086905b828110620002a7575050620000f6565b6000815501869062000297565b925081926200028f565b602289634e487b7160e01b6000525260246000fd5b90607f1690620000e4565b634e487b7160e01b600052604160045260246000fd5b015190503880620000b5565b90879350601f19831691866000528a6000209260005b8c82821062000350575050841162000337575b505050811b018255620000c7565b015160001983871b60f8161c1916905538808062000329565b8385015186558b9790950194938401930162000316565b9091508460005288600020848085018a1c8201928b8610620003b1575b91899186959493018b1c01915b828110620003a15750506200009e565b6000815585945089910162000391565b9250819262000384565b634e487b7160e01b600052602260045260246000fd5b92607f169262000087565b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461062a57508063095ea7b31461058157806318160ddd1461056257806323b872dd1461046f578063313ce5671461045357806340c10f19146103a457806370a082311461036d578063715018a61461030d5780638da5cb5b146102e457806395d89b41146101c2578063a9059cbb14610191578063dd62ed3e146101445763f2fde38b146100b257600080fd5b34610140576020366003190112610140576100cb61076a565b906100d4610879565b6001600160a01b0391821692831561012a575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50503461018d578060031936011261018d578060209261016261076a565b61016a610785565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50503461018d578060031936011261018d576020906101bb6101b161076a565b602435903361079b565b5160018152f35b5091903461018d578160031936011261018d5780519082845460018160011c90600183169283156102da575b60209384841081146102c7578388529081156102ab5750600114610256575b505050829003601f01601f191682019267ffffffffffffffff841183851017610243575082918261023f925282610721565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838510610297575050505083010138808061020d565b805488860183015293019284908201610281565b60ff1916878501525050151560051b840101905038808061020d565b634e487b7160e01b895260228a52602489fd5b91607f16916101ee565b50503461018d578160031936011261018d5760055490516001600160a01b039091168152602090f35b833461036a578060031936011261036a57610326610879565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461018d57602036600319011261018d5760209181906001600160a01b0361039561076a565b16815280845220549051908152f35b5090346101405780600319360112610140576103be61076a565b90602435916103cb610879565b6001600160a01b031692831561043e576002549083820180921161042b575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b50503461018d578160031936011261018d576020905160128152f35b50823461036a57606036600319011261036a5761048a61076a565b610492610785565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106104ce575b6020886101bb89898961079b565b86831061053657811561051f573315610508575082526001602090815286832033845281529186902090859003905582906101bb876104c0565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50503461018d578160031936011261018d576020906002549051908152f35b503461014057816003193601126101405761059a61076a565b602435903315610613576001600160a01b03169182156105fc57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b84915083346101405782600319360112610140578260035460018160011c9060018316928315610717575b60209384841081146102c7578388529081156106fb57506001146106a557505050829003601f01601f191682019267ffffffffffffffff841183851017610243575082918261023f925282610721565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106106e7575050505083010185808061020d565b8054888601830152930192849082016106d1565b60ff1916878501525050151560051b840101905085808061020d565b91607f1691610655565b6020808252825181830181905290939260005b82811061075657505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610734565b600435906001600160a01b038216820361078057565b600080fd5b602435906001600160a01b038216820361078057565b916001600160a01b0380841692831561086057169283156108475760009083825281602052604082205490838210610815575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6005546001600160a01b0316330361088d57565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220fb9010026a3878f5380af8a03e8e2c6f7560d12db4e969ad68fcabc9dc25b08f64736f6c63430008180033";

type TestStablecoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestStablecoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestStablecoin__factory extends ContractFactory {
  constructor(...args: TestStablecoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestStablecoin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestStablecoin__factory {
    return super.connect(runner) as TestStablecoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestStablecoinInterface {
    return new Interface(_abi) as TestStablecoinInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestStablecoin {
    return new Contract(address, _abi, runner) as unknown as TestStablecoin;
  }
}
